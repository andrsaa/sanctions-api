import kotlin.String

/**
 * Generated by
 *    $ ./gradlew buildSrcLibs
 * Re-run when you add a new dependency to the build
 *
 * Find which updates are available by running
 *     $ ./gradlew refreshVersions
 * And edit the file `versions.properties`
 *
 * See https://github.com/Splitties/refreshVersions
 */
object Libs {
  const val de_fayard_buildsrclibs_gradle_plugin: String =
    "de.fayard.buildSrcLibs:de.fayard.buildSrcLibs.gradle.plugin:_"

  const val io_freefair_lombok_gradle_plugin: String =
    "io.freefair.lombok:io.freefair.lombok.gradle.plugin:_"

  const val io_spring_dependency_management_gradle_plugin: String =
    "io.spring.dependency-management:io.spring.dependency-management.gradle.plugin:_"

  const val junit_platform_launcher: String = "org.junit.platform:junit-platform-launcher"

  const val liquibase_core: String = "org.liquibase:liquibase-core"

  const val picocli: String = "info.picocli:picocli:_"

  const val postgresql: String = "org.postgresql:postgresql"

  const val hypersistence_utils_hibernate_62: String = "io.hypersistence:hypersistence-utils-hibernate-62:_"

  const val org_springframework_boot_gradle_plugin: String =
    "org.springframework.boot:org.springframework.boot.gradle.plugin:_"

  const val spring_boot_starter_data_jpa: String =
    "org.springframework.boot:spring-boot-starter-data-jpa"

  const val spring_boot_starter_test: String =
    "org.springframework.boot:spring-boot-starter-test"

  const val spring_boot_starter_web: String =
    "org.springframework.boot:spring-boot-starter-web:_"

  const val spring_tx: String = "org.springframework:spring-tx:_"

  const val spring_boot_start_security: String = "org.springframework.boot:spring-boot-starter-security:_"

  const val spring_boot_starter: String = "org.springframework.boot:spring-boot-starter:_"

  const val spring_data_commons: String = "org.springframework.data:spring-data-commons:_"

  const val spring_boot_starter_tomcat: String = "org.springframework.boot:spring-boot-starter-tomcat:_"

}
